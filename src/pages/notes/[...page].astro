---
import { type CollectionEntry, getCollection } from "astro:content";
import Pagination from "@/components/Paginator.astro";
import Note from "@/components/note/Note.astro";
import BackToTop from "@/components/BackToTop.astro";
import PageLayout from "@/layouts/Base.astro";
import { collectionDateSort } from "@/utils/date";
import type { GetStaticPaths, Page } from "astro";
import { Icon } from "astro-icon/components";

export const getStaticPaths = (async ({ paginate }) => {
	const MAX_NOTES_PER_PAGE = 10;
	const allNotes = await getCollection("note");
	return paginate(allNotes.sort(collectionDateSort), { pageSize: MAX_NOTES_PER_PAGE });
}) satisfies GetStaticPaths;

interface Props {
	page: Page<CollectionEntry<"note">>;
	uniqueTags: string[];
}

const { page } = Astro.props;

const meta = {
	description: "阅读我的笔记合集",
	title: "笔记",
};

const paginationProps = {
	...(page.url.prev && {
		prevUrl: {
			text: "← 上一页",
			url: page.url.prev,
		},
	}),
	...(page.url.next && {
		nextUrl: {
			text: "下一页 →",
			url: page.url.next,
		},
	}),
};
---

<PageLayout meta={meta}>
	<section>
		<h1 id="notes-hero" class="title mb-12 flex items-center gap-3">
			笔记 <a class="text-accent" href="/notes/rss.xml" target="_blank">
				<span class="sr-only">RSS 订阅</span>
				<Icon aria-hidden="true" class="h-6 w-6" focusable="false" name="mdi:rss" />
			</a>
		</h1>
		<div class="grid gap-6 mt-8">
			{
				page.data.map((note) => (
					<Note note={note} as="h2" isPreview />
				))
			}
		</div>
		<Pagination {...paginationProps} />
	</section>
	<!-- 回到顶部按钮 -->
	<BackToTop targetId="notes-hero" />
</PageLayout>
